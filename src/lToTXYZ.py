
#===================================
#        Chengwen Liu              #
#      liuchw2010@gmail.com        #
#   University of Texas at Austin  #
#===================================

import argparse
import os
import sys

# color
RED = '\033[91m'
GREEN = '\033[92m'
ENDC = '\033[0m'

def babel(fi, flag):
  ot = 'txyz' 
  fo = fmm2
  if flag:
    ot = 'mna'
    fo = '-xL6 '+ fmna
  if (ti in ["XYZ", "G09", "QCOUT", "MOL", "MOL2", "PDB", "SDF"]):
    cmdstr = f"babel -i{ti.lower()} {fi} -o{ot} {fo}"
  elif ti == "PSI4":
    psi42xyz(fi, fxyz)
    cmdstr = f"babel -ixyz {fxyz} -o{ot} {fo}"
  elif ti == "PSI4OUT":
    psiout2xyz(fi, fxyz)
    cmdstr = f"babel -ixyz {fxyz} -o{ot} {fo}"
  else:
    sys.exit(RED + f"File format {ti} not supported!"+ ENDC)
  print(GREEN + f"Running {cmdstr}" +ENDC)
  os.system(cmdstr)
 
  '''read the mna file to construct atom type list'''
  types = []
  record = {}
  idx = 401 
  for line in open(fmna).readlines()[2:]:
    e = line[0] 
    if e == '-':
      e = line[1]
    l = str(len(line))
    s = e+l
    if s not in record:
      types.append(str(idx))
      record[s] = idx
      idx += 1
    else:
      types.append(str(record[s])) 
  return types


def psiout2xyz(finp, fout):
  lines = open(finp).readlines()
  for n in range(len(lines)):
    if "Final optimized geometry " in lines[n]:
      break
  atoms = []
  coords = []
  for n in range(n+6, len(lines)):
    if lines[n] == "\n":
      break
    dd = lines[n].split()
    atoms.append(dd[0])
    coords.append(dd[1:4])
  with open(fout, "w") as f:
    f.write("%3s\nconverted from %s\n"%(len(atoms), finp))
    for n in range(len(atoms)):
      f.write("%3s%12.6f%12.6f%12.6f\n"%(atoms[n], float(coords[n][0]), float(coords[n][1]), float(coords[n][2])))
  return

def psi42xyz(finp, fout):
  lines = open(finp).readlines()
  for n in range(len(lines)):
    if "MOLECULE" in lines[n].upper():
      break
  atoms = []
  coords = []
  for n in range(n+2, len(lines)):
    if "}" in lines[n]:
      break
    dd = lines[n].split()
    atoms.append(dd[0])
    coords.append(dd[1:4])
  with open(fout, "w") as f:
    f.write("%3s\nconverted from %s\n"%(len(atoms), finp))
    for n in range(len(atoms)):
      f.write("%3s%12.6f%12.6f%12.6f\n"%(atoms[n], float(coords[n][0]), float(coords[n][1]), float(coords[n][2])))
  return

def ToTXYZ(fi, types):
  babel(fi,False)
  lines = open(fmm2).readlines()
  with open(ftxyz,"w") as f:
    f.write(f"{lines[0].split()[0]} Generated by lToTXYZ.py\n")
    for i in range(len(lines)):
      if i != 0:
        ss = lines[i].split()
        s = '   '.join(ss[6:])
        f.write(f"{ss[0]:5s}{ss[1]:3s}{float(ss[2]):10.5f}{float(ss[3]):10.5f}{float(ss[4]):10.5f} {types[i-1]:5s}{s}\n")
  return

def main():
  parser = argparse.ArgumentParser()
  parser.add_argument('-i', dest = 'inp', required=True, help="input filename")  
  parser.add_argument('-t', dest = 'typ', required=True, choices = ["xyz", "g09", "qcout", "mol", "mol2", "psi4", "sdf", "pdb", "psi4out"])
  args = vars(parser.parse_args())
  global ti,ftxyz,fmm2,fmna
  fi = args["inp"]
  ti = args["typ"].upper()
  fin = os.path.splitext(fi)[0]
  ftxyz = fin + ".txyz"
  fmm2 = fin + ".mm2"
  fmna = fin + ".mna"
  types = babel(fi,True)
  ToTXYZ(fi, types)
  os.remove(fmna)
  os.remove(fmm2)
  return

if __name__ == "__main__":
  main()
